---
import Layout from 'src/layouts/Layout.astro';
---

<Layout title="Documentation - ASSQ-CloudFlare Stack">

	<main>
		<!-- Hero Section -->
		<section class="bg-gradient-to-b from-blue-50 to-white dark:from-gray-900 dark:to-gray-800 py-16 lg:py-24">
			<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
				<div class="text-center">
					<h1 class="text-4xl lg:text-5xl font-bold mb-6">
						ASSQ-CloudFlare Stack Documentation
					</h1>
					<p class="text-xl text-gray-600 dark:text-gray-300 max-w-3xl mx-auto">
						Learn how to build modern web applications using Astro, SolidJS, Svelte, and Qwik together on CloudFlare.
					</p>
				</div>
			</div>
		</section>

		<!-- Getting Started Section -->
		<section class="py-16 lg:py-24">
			<div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
				<div class="prose prose-lg dark:prose-invert mx-auto">
					<h2 class="text-3xl font-bold mb-6">Getting Started</h2>
					
					<h3 class="text-2xl font-semibold mb-4">Prerequisites</h3>
					<ul class="space-y-2 mb-6">
						<li>Node.js 18+ installed</li>
						<li>npm or pnpm package manager</li>
						<li>Basic knowledge of modern JavaScript/TypeScript</li>
						<li>CloudFlare account (for deployment)</li>
					</ul>

					<h3 class="text-2xl font-semibold mb-4">Installation</h3>
					<div class="bg-gray-900 rounded-lg p-6 mb-6">
						<pre class="text-gray-300"><code># Clone the repository
git clone https://github.com/your-repo/assq-cloudflare-stack.git

# Install dependencies
cd assq-cloudflare-stack
npm install

# Start development server
npm run dev</code></pre>
					</div>

					<h2 class="text-3xl font-bold mb-6 mt-12">Architecture Overview</h2>
					<p class="text-gray-600 dark:text-gray-300 mb-6">
						This template demonstrates how to combine multiple modern frameworks in a single application. Each framework serves different purposes and can be used independently or together.
					</p>

					<h3 class="text-2xl font-semibold mb-4">Framework Roles</h3>
					
					<div class="bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6 mb-6">
						<h4 class="text-xl font-bold mb-3 text-blue-600 dark:text-blue-400">🚀 Astro - The Foundation</h4>
						<p class="text-gray-600 dark:text-gray-300 mb-3">
							Astro serves as the main framework and build system. It provides:
						</p>
						<ul class="list-disc list-inside space-y-1 text-gray-600 dark:text-gray-300">
							<li>Static site generation with partial hydration</li>
							<li>File-based routing system</li>
							<li>Component integration capabilities</li>
							<li>Build optimization and bundling</li>
						</ul>
					</div>

					<div class="bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6 mb-6">
						<h4 class="text-xl font-bold mb-3 text-purple-600 dark:text-purple-400">⚡ SolidJS - Reactive UIs</h4>
						<p class="text-gray-600 dark:text-gray-300 mb-3">
							SolidJS components are used for complex interactive features:
						</p>
						<ul class="list-disc list-inside space-y-1 text-gray-600 dark:text-gray-300">
							<li>Fine-grained reactivity system</li>
							<li>Counter components and interactive widgets</li>
							<li>SPA-like behavior in specific sections</li>
							<li>State management for dynamic content</li>
						</ul>
					</div>

					<div class="bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6 mb-6">
						<h4 class="text-xl font-bold mb-3 text-green-600 dark:text-green-400">🎯 Svelte - Simplified Components</h4>
						<p class="text-gray-600 dark:text-gray-300 mb-3">
							Svelte is used for lightweight, self-contained components:
						</p>
						<ul class="list-disc list-inside space-y-1 text-gray-600 dark:text-gray-300">
							<li>Pricing cards and marketing components</li>
							<li>Compile-time optimizations</li>
							<li>No runtime overhead</li>
							<li>Simple state management</li>
						</ul>
					</div>

					<div class="bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6 mb-6">
						<h4 class="text-xl font-bold mb-3 text-indigo-600 dark:text-indigo-400">🏃 Qwik - Performance First</h4>
						<p class="text-gray-600 dark:text-gray-300 mb-3">
							Qwik components focus on instant loading and performance:
						</p>
						<ul class="list-disc list-inside space-y-1 text-gray-600 dark:text-gray-300">
							<li>Resumable applications</li>
							<li>Zero hydration overhead</li>
							<li>Lazy loading by default</li>
							<li>Edge-optimized delivery</li>
						</ul>
					</div>

					<h2 class="text-3xl font-bold mb-6 mt-12">Project Structure</h2>
					<div class="bg-gray-900 rounded-lg p-6 mb-6">
						<pre class="text-gray-300 text-sm"><code>src/
├── components/                 # Shared utilities and docs
├── components-qwik/           # Qwik components
│   └── QwikCounter.tsx
├── components-solid/          # SolidJS components
│   ├── Counter.tsx
│   ├── DarkModeToggle.tsx
│   └── SolidCounter.tsx
├── components-svelte/         # Svelte components
│   ├── PricingCard.svelte
│   └── SvelteCounter.svelte
├── applications-solid/        # SolidJS SPA section
│   └── main-app/
│       ├── App.tsx
│       ├── components/
│       ├── pages/
│       └── middleware/
├── layouts/
│   └── Layout.astro          # Main layout template
├── pages/                    # Astro pages (file-based routing)
│   ├── index.astro           # Homepage
│   ├── docs/
│   ├── frameworks-test/      # Live demo page
│   └── solid-spa/           # SolidJS SPA catchall
└── styles/
    └── global.css           # Global styles and Tailwind</code></pre>
					</div>

					<h2 class="text-3xl font-bold mb-6 mt-12">CloudFlare Integration</h2>
					<p class="text-gray-600 dark:text-gray-300 mb-6">
						This template is optimized for CloudFlare Pages deployment with additional CloudFlare services:
					</p>

					<div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-8">
						<div class="bg-orange-50 dark:bg-orange-900/20 rounded-lg p-6">
							<h4 class="text-lg font-bold mb-3 text-orange-600 dark:text-orange-400">CloudFlare Pages</h4>
							<ul class="list-disc list-inside space-y-1 text-gray-600 dark:text-gray-300 text-sm">
								<li>Automatic deployments from Git</li>
								<li>Global edge distribution</li>
								<li>Built-in preview deployments</li>
								<li>Custom domains and SSL</li>
							</ul>
						</div>
						<div class="bg-orange-50 dark:bg-orange-900/20 rounded-lg p-6">
							<h4 class="text-lg font-bold mb-3 text-orange-600 dark:text-orange-400">CloudFlare Workers</h4>
							<ul class="list-disc list-inside space-y-1 text-gray-600 dark:text-gray-300 text-sm">
								<li>API endpoints and middleware</li>
								<li>Edge computing capabilities</li>
								<li>Request/response manipulation</li>
								<li>Serverless functions</li>
							</ul>
						</div>
						<div class="bg-orange-50 dark:bg-orange-900/20 rounded-lg p-6">
							<h4 class="text-lg font-bold mb-3 text-orange-600 dark:text-orange-400">CloudFlare D1</h4>
							<ul class="list-disc list-inside space-y-1 text-gray-600 dark:text-gray-300 text-sm">
								<li>SQLite database at the edge</li>
								<li>Low latency data access</li>
								<li>Automatic replication</li>
								<li>SQL-based queries</li>
							</ul>
						</div>
						<div class="bg-orange-50 dark:bg-orange-900/20 rounded-lg p-6">
							<h4 class="text-lg font-bold mb-3 text-orange-600 dark:text-orange-400">CloudFlare R2</h4>
							<ul class="list-disc list-inside space-y-1 text-gray-600 dark:text-gray-300 text-sm">
								<li>Object storage for assets</li>
								<li>S3-compatible API</li>
								<li>No egress fees</li>
								<li>Global distribution</li>
							</ul>
						</div>
					</div>

					<h2 class="text-3xl font-bold mb-6 mt-12">Development Workflow</h2>

					<h3 class="text-2xl font-semibold mb-4">Adding New Components</h3>
					<p class="text-gray-600 dark:text-gray-300 mb-4">
						Choose the appropriate framework based on your component's requirements:
					</p>

					<div class="bg-blue-50 dark:bg-blue-900/20 rounded-lg p-6 mb-6">
						<h4 class="text-lg font-bold mb-3 text-blue-600 dark:text-blue-400">When to use each framework:</h4>
						<ul class="space-y-3 text-gray-600 dark:text-gray-300">
							<li><strong>Astro:</strong> Static content, layouts, and pages that don't need client-side interactivity</li>
							<li><strong>SolidJS:</strong> Complex interactive components with state management and reactive updates</li>
							<li><strong>Svelte:</strong> Self-contained widgets and components with minimal bundle size requirements</li>
							<li><strong>Qwik:</strong> Performance-critical components that need instant loading and resumability</li>
						</ul>
					</div>

					<h3 class="text-2xl font-semibold mb-4">Building and Deployment</h3>
					<div class="bg-gray-900 rounded-lg p-6 mb-6">
						<pre class="text-gray-300"><code># Build for production
npm run build

# Preview production build locally
npm run preview

# Deploy to CloudFlare Pages
# Push to your connected Git repository or use wrangler CLI
wrangler pages publish dist</code></pre>
					</div>

					<h2 class="text-3xl font-bold mb-6 mt-12">Configuration Files</h2>
					<p class="text-gray-600 dark:text-gray-300 mb-6">
						Key configuration files that make this multi-framework setup work:
					</p>

					<div class="space-y-4">
						<div class="bg-gray-50 dark:bg-gray-800 rounded-lg p-4">
							<h4 class="text-lg font-bold mb-2">astro.config.mjs</h4>
							<p class="text-gray-600 dark:text-gray-300 text-sm">Main Astro configuration with integrations for SolidJS, Svelte, and Qwik</p>
						</div>
						<div class="bg-gray-50 dark:bg-gray-800 rounded-lg p-4">
							<h4 class="text-lg font-bold mb-2">tsconfig.json</h4>
							<p class="text-gray-600 dark:text-gray-300 text-sm">TypeScript configuration with path mapping and framework-specific settings</p>
						</div>
						<div class="bg-gray-50 dark:bg-gray-800 rounded-lg p-4">
							<h4 class="text-lg font-bold mb-2">wrangler.toml</h4>
							<p class="text-gray-600 dark:text-gray-300 text-sm">CloudFlare Workers configuration for deployment and edge functions</p>
						</div>
						<div class="bg-gray-50 dark:bg-gray-800 rounded-lg p-4">
							<h4 class="text-lg font-bold mb-2">svelte.config.js</h4>
							<p class="text-gray-600 dark:text-gray-300 text-sm">Svelte preprocessing and integration configuration</p>
						</div>
					</div>

					<h2 class="text-3xl font-bold mb-6 mt-12">Best Practices</h2>
					<div class="space-y-6">
						<div class="bg-green-50 dark:bg-green-900/20 rounded-lg p-6">
							<h4 class="text-lg font-bold mb-3 text-green-600 dark:text-green-400">✅ Do</h4>
							<ul class="list-disc list-inside space-y-1 text-gray-600 dark:text-gray-300">
								<li>Use Astro for static content and page structure</li>
								<li>Choose the right framework for each component's needs</li>
								<li>Leverage TypeScript for better development experience</li>
								<li>Minimize client-side JavaScript by using Astro's partial hydration</li>
								<li>Test components individually in their respective frameworks</li>
							</ul>
						</div>
						<div class="bg-red-50 dark:bg-red-900/20 rounded-lg p-6">
							<h4 class="text-lg font-bold mb-3 text-red-600 dark:text-red-400">❌ Don't</h4>
							<ul class="list-disc list-inside space-y-1 text-gray-600 dark:text-gray-300">
								<li>Mix multiple frameworks in a single component</li>
								<li>Over-complicate simple components by using reactive frameworks</li>
								<li>Forget to configure client-side hydration when needed</li>
								<li>Ignore bundle size - choose lightweight frameworks for simple tasks</li>
								<li>Skip testing framework-specific functionality</li>
							</ul>
						</div>
					</div>

					<h2 class="text-3xl font-bold mb-6 mt-12">Examples and Demos</h2>
					<p class="text-gray-600 dark:text-gray-300 mb-6">
						Visit the <a href="/frameworks-test" class="text-blue-600 dark:text-blue-400 hover:underline">live demo page</a> to see all frameworks working together. Each component demonstrates different capabilities and use cases.
					</p>

					<div class="bg-blue-50 dark:bg-blue-900/20 rounded-lg p-6">
						<h4 class="text-lg font-bold mb-3 text-blue-600 dark:text-blue-400">Need Help?</h4>
						<p class="text-gray-600 dark:text-gray-300">
							Check out the individual framework documentation or explore the source code in the components directories. Each component includes inline comments explaining the implementation details.
						</p>
					</div>
				</div>
			</div>
		</section>
	</main>

	<footer class="border-t border-gray-200 dark:border-gray-800 py-12">
		<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
			<div class="text-center text-gray-600 dark:text-gray-400">
				<p>&copy; 2025 ASSQ-CloudFlare Stack Template. Open source and ready to use.</p>
			</div>
		</div>
	</footer>
</Layout>